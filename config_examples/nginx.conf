
worker_processes  3;
error_log  logs/error.log;
events {
    worker_connections  1024;
    multi_accept on;
}

http {
    ssl_session_cache             shared:SSL:10m;
    ssl_session_timeout           10m;
    include                       mime.types;
    default_type                  application/octet-stream;
    sendfile                      on;
    keepalive_timeout             120;   
    proxy_http_version            1.1;
    gzip                          on;
    gzip_disable                 "msie6";
    gzip_proxied                  any;
    gzip_comp_level               5;
    gzip_types                    text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    server_names_hash_bucket_size 64;

    # HTTP server
    server {
        listen       80;
        server_name  localhost $local_ip 127.0.0.1;

       if ($scheme = http) {
           return 301 https://$domen$request_uri;
       }

        location /$protected_path/ {
            auth_request /validation;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            error_page 401 = /authpage;
            # protected interface
            proxy_pass http://localhost:$port_protect/$protected_path/;
        }
        location = /validation {
            proxy_pass http://localhost:$port_validate/validation;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /authpage {
            proxy_pass http://localhost:$port_validate/authpage;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = / {
            return 301 /$protected_path;
        }
        error_page 401 /401.html;
        location = /401.html {
            root "C:/nginx/html";
        }
        error_page 403 /403.html;
        location = /403.html {
            root "C:/nginx/html";
        }
        error_page 404 /404.html;
        location = /404.html {
            root "C:/nginx/html";
        }
        error_page 500 502 503 504  /50x.html;
        location = /50x.html {
            root "C:/nginx/html";
        }
    }

    # HTTPS server
    server {
        listen                    443 ssl;
        server_name               $domain;
        
        if ($host = www.$domain) {
            return 301 https://$domain$request_uri;
        }
        if ($host != $domain) {
            return 301 https://$domain$request_uri;
        }
        if ($scheme = http) {
            return 301 https://$domain$request_uri;
        }
        
        keepalive_timeout         70;
        resolver                  8.8.8.8;
        ssl_certificate           $path_to_certificate;
        ssl_certificate_key       $path_to_key;
        ssl_protocols             TLSv1.2 TLSv1.3;
        ssl_ciphers               ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_session_timeout       1d;        
        ssl_session_tickets       off;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=63072000" always;

        location /$protected_path/ {
            auth_request /validation;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            error_page 401 = /authpage;
            # protected interface
            proxy_pass http://localhost:$port_protect/$protected_path/;
        }
        location = /validation {
            proxy_pass http://localhost:$port_validate/validation;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /authpage {
            proxy_pass http://localhost:$port_validate/authpage;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = / {
            return 301 /$protected_path;
        }

        error_page 401 /401.html;
        location = /401.html {
            root "C:/nginx/html";
        }
        error_page 403 /403.html;
        location = /403.html {
            root "C:/nginx/html";
        }
    	error_page 404 /404.html;
        location = /404.html {
            root "C:/nginx/html";
        }
        error_page 500 502 503 504  /50x.html;
        location = /50x.html {
            root "C:/nginx/html";
        }
    }

    server {
        listen 80 default_server;
        server_name _;
    	return 404;

        error_page 404 /404.html;
    	location = /404.html{
            root "C:/nginx/html";
            internal;
        }
    }
}
